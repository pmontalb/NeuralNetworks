include_guard()

set(OPTIM_DEBUG_FLAG "")
mark_as_advanced(OPTIM_DEBUG_FLAG)
if (OPTIMIZATIONS_GENERATE_DEBUG_INFO)
    set(OPTIM_DEBUG_FLAG -g)
endif()

set(OPTIM_LEVEL_FLAG -O3)
mark_as_advanced(OPTIM_LEVEL_FLAG)
if (OPTIMIZATIONS_USE_OFAST)
    set(OPTIM_LEVEL_FLAG -Ofast)
endif()

set(OPTIM_MEM_FLAG "")
mark_as_advanced(OPTIM_MEM_FLAG)
if (OPTIMIZATIONS_USE_MEMORY_OPTIMIZATION)
    if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
        message(STATUS "Using Polly")
        set(OPTIM_MEM_FLAG -mllvm -polly -mllvm -polly-vectorizer=stripmine)
    elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
        message(STATUS "Using Graphite")
        set(OPTIM_MEM_FLAG -fgraphite-identity -floop-nest-optimize)
    elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
        message(FATAL "icc not supported")
    elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
        message(FATAL "MSVC not supported")
    endif()
endif()

set(OPTIM_FAST_MATH_FLAG "")
mark_as_advanced(OPTIM_FAST_MATH_FLAG)
if (OPTIMIZATIONS_USE_FAST_MATH)
    set(OPTIM_FAST_MATH_FLAG -ffast-math)
endif()

set(OPTIM_LTO_FLAG "")
mark_as_advanced(OPTIM_LTO_FLAG)
if (OPTIMIZATIONS_USE_LTO)
    set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
endif()

if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    set(CMAKE_CXX_FLAGS_RELEASE "${OPTIM_DEBUG_FLAG} ${OPTIM_LEVEL_FLAG} ${OPTIM_MEM_FLAG} ${OPTIM_FAST_MATH_FLAG}" CACHE STRING "")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    set(CMAKE_CXX_FLAGS_RELEASE "${OPTIM_DEBUG_FLAG} ${OPTIM_LEVEL_FLAG} ${OPTIM_MEM_FLAG} ${OPTIM_FAST_MATH_FLAG}" CACHE STRING "")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
    set(CMAKE_CXX_FLAGS_RELEASE "${OPTIM_DEBUG_FLAG} ${OPTIM_LEVEL_FLAG} ${OPTIM_MEM_FLAG} ${OPTIM_FAST_MATH_FLAG}" CACHE STRING "")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
    message(FATAL "MSVC not supported")
endif()